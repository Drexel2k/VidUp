<Window x:Class="Drexel.VidUp.UI.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Fluent="urn:fluent-ribbon" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" Title="{Binding AppTitle}" Top="{Binding WindowTop, Mode=TwoWay, Delay=500}" Left="{Binding WindowLeft, Mode=TwoWay, Delay=500}" Width="{Binding WindowWidth, Mode=TwoWay, Delay=500}" Height="{Binding WindowHeight, Mode=TwoWay, Delay=500}" xmlns:vm="clr-namespace:Drexel.VidUp.UI.ViewModels" xmlns:controls="clr-namespace:Drexel.VidUp.UI.Controls" xmlns:converters="clr-namespace:Drexel.VidUp.UI.Converters" xmlns:local="clr-namespace:Drexel.VidUp.UI" xmlns:system="clr-namespace:System;assembly=mscorlib" x:Name="CMainWindow" Icon="images/vidup.ico" Closed="closed">
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressValue="{Binding Mode=OneWay, Path=TotalProgressPercentage}" ProgressState="{Binding Mode=OneWay, Path=TaskbarItemProgressState}"/>
    </Window.TaskbarItemInfo>
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <DataTemplate DataType="{x:Type vm:UploadListViewModel}">
            <controls:UploadListControl/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:TemplateViewModel}">
            <controls:TemplateControl/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:PlaylistViewModel}">
            <controls:PlaylistControl/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:SettingsViewModel}">
            <controls:SettingsControl/>
        </DataTemplate>
        <Style x:Key="HorizontalDividerBorder" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}"/>
            <Setter Property="Height" Value="1"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
        </Style>
    </Window.Resources>
    <materialDesign:DialogHost Identifier="RootDialog">
        <materialDesign:DrawerHost x:Name="DrawerHost">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <StackPanel DataContext="{Binding RibbonViewModels[0]}">
                    <Button Width="50" Padding="0" Margin="0 0 0 2" HorizontalAlignment="Right" Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}" CommandParameter="{x:Static Dock.Left}" ToolTip="Close advanced menu." ToolTipService.ShowDuration="60000" Style="{StaticResource MaterialDesignRaisedLightButton}">
                        <materialDesign:PackIcon Width="24" Height="24" Kind="ArrowLeft"/>
                    </Button>
                    <Expander Header="Recalculate Publish At Dates" IsExpanded="{Binding ContextExpanderIsExpanded, Mode=TwoWay, Converter={converters:ExpanderIndexToBooleanConverter}, ConverterParameter=0}">
                        <StackPanel Margin="5 0 0 0">
                            <TextBlock>Template:</TextBlock>
                            <ComboBox materialDesign:TextFieldAssist.UnderlineBrush="#67daff" IsEditable="False" VerticalAlignment="Bottom" ItemsSource="{Binding ObservableTemplateViewModelsInclAll}" SelectedItem="{Binding RecalculatePublishAtSelectedTemplate}" Width="265" HorizontalAlignment="Left">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding NameWithYoutubeAccountName}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Visible}" Value="false">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                            <TextBlock>Start Date:</TextBlock>
                            <StackPanel Orientation="Horizontal">
                                <Button Command="{Binding ResetRecalculatePublishAtStartDateCommand }" Style="{StaticResource MaterialDesignFlatButton}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0 5 5 0" Width="12" Height="12" Padding="0" VerticalContentAlignment="Top" BorderThickness="0" ToolTip="Clear value." ToolTipService.ShowDuration="60000">
                                    <Image Source="../Images/minus.png"/>
                                </Button>
                                <DatePicker Width="248" materialDesign:TextFieldAssist.UnderlineBrush="#67daff" materialDesign:HintAssist.Hint="Pick Date" Style="{StaticResource MaterialDesignDatePicker}" SelectedDate="{Binding RecalculatePublishAtStartDate}" DisplayDateStart="{Binding RecalculatePublishAtFirstDate, Mode=OneWay}" HorizontalAlignment="Right">

                                </DatePicker>
                            </StackPanel>
                            <Button Command="{Binding ParameterlessCommand}" CommandParameter="recalculatepublishat" Width="265" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"  Padding="0" Margin="0 5 0 5" HorizontalContentAlignment="Left">
                                <StackPanel Orientation="Horizontal" Margin="0" >
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="Calendar" />
                                    <TextBlock Text="Recalculate Uploads with:" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Expander>
                    <Border Style="{StaticResource HorizontalDividerBorder}"/>
                    <Expander Header="Remove Uploads" IsExpanded="{Binding ContextExpanderIsExpanded, Mode=TwoWay, Converter={converters:ExpanderIndexToBooleanConverter}, ConverterParameter=1}">
                        <StackPanel Margin="5 0 0 0">
                            <TextBlock>Template:</TextBlock>
                            <ComboBox materialDesign:TextFieldAssist.UnderlineBrush="#67daff" IsEditable="False" VerticalAlignment="Bottom" ItemsSource="{Binding ObservableTemplateViewModelsInclAllNone}" SelectedItem="{Binding DeleteSelectedTemplate}" Width="265" HorizontalAlignment="Left">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding NameWithYoutubeAccountName}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Visible}" Value="false">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                            <TextBlock>Status:</TextBlock>
                            <ComboBox materialDesign:TextFieldAssist.UnderlineBrush="#67daff" IsEditable="False" VerticalAlignment="Bottom" ItemsSource="{Binding StatusesInclAll}" SelectedItem="{Binding DeleteSelectedUploadStatus}" Width="265" HorizontalAlignment="Left">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={converters:UplStatusStringValuesConverter}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <StackPanel Orientation="Horizontal" Margin="0 4 0 4">
                                <ToggleButton IsChecked="{Binding KeepLastUploadPerTemplateSide}" Style="{StaticResource MaterialDesignSwitchToggleButton}" Background="Black" materialDesign:ToggleButtonAssist.SwitchTrackOnBackground="Black" VerticalAlignment="Top" Margin="8 8 0 8"/>
                                <Label Content="Keep last upload" Width="95" HorizontalAlignment="Left" Margin="0 3 0 0" />
                                <materialDesign:PackIcon Kind="HelpCircleOutline" VerticalAlignment="Bottom" Margin="5 0 0 10" ToolTip="Keep last upload per template for better overview of upload progress." ToolTipService.ShowDuration="60000" Background="Transparent"/>
                            </StackPanel>
                            <Button Command="{Binding ParameterlessCommand}" CommandParameter="deleteside" Width="265" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black" Padding="0" Margin="0 5 0 5" HorizontalContentAlignment="Left">
                                <StackPanel Orientation="Horizontal" Margin="0">
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="FileRemove"/>
                                    <TextBlock Text="Remove Uploads with:" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Expander>
                    <Border Style="{StaticResource HorizontalDividerBorder}"/>
                    <Expander Header="Reset Upload Status" IsExpanded="{Binding ContextExpanderIsExpanded, Mode=TwoWay, Converter={converters:ExpanderIndexToBooleanConverter}, ConverterParameter=2}">
                        <StackPanel Margin="5 0 0 0">
                            <TextBlock>To:</TextBlock>
                            <ComboBox materialDesign:TextFieldAssist.UnderlineBrush="#67daff" IsEditable="False" VerticalAlignment="Bottom" ItemsSource="{Binding ResetToUploadStatuses}" SelectedItem="{Binding ResetToSelectedUploadStatus}" Width="265" HorizontalAlignment="Left">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={converters:UplStatusStringValuesConverter}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <TextBlock>With Status:</TextBlock>
                            <ComboBox materialDesign:TextFieldAssist.UnderlineBrush="#67daff" IsEditable="False" VerticalAlignment="Bottom" ItemsSource="{Binding StatusesInclAll}" SelectedItem="{Binding ResetWithSelectedUploadStatus}" Width="265" HorizontalAlignment="Left">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={converters:UplStatusStringValuesConverter}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <TextBlock>With Template:</TextBlock>
                            <ComboBox materialDesign:TextFieldAssist.UnderlineBrush="#67daff" IsEditable="False" VerticalAlignment="Bottom" ItemsSource="{Binding ObservableTemplateViewModelsInclAllNone}" SelectedItem="{Binding ResetWithSelectedTemplate}" Width="265" HorizontalAlignment="Left">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding NameWithYoutubeAccountName}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Visible}" Value="false">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                            <Button Command="{Binding ParameterlessCommand}" CommandParameter="resetstatus" Width="265" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black" Padding="0" Margin="0 5 0 5" HorizontalContentAlignment="Left">
                                <StackPanel Orientation="Horizontal" Margin="0">
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="FileRemove"/>
                                    <TextBlock Text="Reset Uploads to:" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Expander>
                    <Expander Header="Reset To Template Values" IsExpanded="{Binding ContextExpanderIsExpanded, Mode=TwoWay, Converter={converters:ExpanderIndexToBooleanConverter}, ConverterParameter=3}">
                        <StackPanel Margin="5 0 0 0">
                            <TextBlock>Attribute:</TextBlock>
                            <ComboBox materialDesign:TextFieldAssist.UnderlineBrush="#67daff" IsEditable="False" VerticalAlignment="Bottom" ItemsSource="{Binding ResetAttributeAttributes}" SelectedItem="{Binding ResetAttributeSelectedAttribute}" Width="265" HorizontalAlignment="Left">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={converters:EnumConverter}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <TextBlock>With Template:</TextBlock>
                            <ComboBox materialDesign:TextFieldAssist.UnderlineBrush="#67daff" IsEditable="False" VerticalAlignment="Bottom" ItemsSource="{Binding ObservableTemplateViewModelsInclAllNone}" SelectedItem="{Binding ResetAttributeSelectedTemplate}" Width="265" HorizontalAlignment="Left">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding NameWithYoutubeAccountName}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Visible}" Value="false">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                            <Button Command="{Binding ParameterlessCommand}" CommandParameter="resetattribute" Width="265" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black" Padding="0" Margin="0 5 0 5" HorizontalContentAlignment="Left">
                                <StackPanel Orientation="Horizontal" Margin="0">
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="FileRestore"/>
                                    <TextBlock Text="Reset Attribute:" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Expander>
                </StackPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TabControl Grid.Row="0" HorizontalContentAlignment="Left" SelectedIndex="{Binding TabNo}" materialDesign:ColorZoneAssist.Mode="PrimaryMid" Style="{StaticResource MaterialDesignFilledTabControl}"  Drop="fileDrop" AllowDrop="True">
                    <TabItem Header="UPLOAD" Width="100" DataContext="{Binding RibbonViewModels[0]}" >
                        <!-- Transparent background is needed as target of drag & drop operation. -->
                        <StackPanel Orientation="Horizontal" Margin="7 3 7 0" Background="Transparent">
                            <Button Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}" CommandParameter="{x:Static Dock.Left}" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="5 0 10 3" Padding="5" ToolTip="Advanced Options." ToolTipService.ShowDuration="60000">
                                <materialDesign:PackIcon Width="24" Height="24" Kind="Menu"/>
                            </Button>

                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="2" Margin="5 10 10 10" />

                            <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                                <Button HorizontalContentAlignment="Left" VerticalAlignment="Top" Command="{Binding ParameterlessCommand}" CommandParameter="addfiles" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"  Padding="5 0 5 0" Height="67">
                                    <StackPanel Orientation="Vertical" MinWidth="50">
                                        <materialDesign:PackIcon Width="24" Height="24" Kind="FilePlus" HorizontalAlignment="Center" Padding="0"/>
                                        <TextBlock TextAlignment="Center">
                                            Add<LineBreak />Files
                                        </TextBlock>
                                    </StackPanel>
                                </Button>
                                <materialDesign:PackIcon Kind="HelpCircleOutline" Margin="0 4 0 0"  ToolTip="You can also drop files anywhere on the menu to add them to the uploads." ToolTipService.ShowDuration="60000" Background="Transparent"/>
                            </StackPanel>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="2" Margin="10" />
                            <Button HorizontalContentAlignment="Left" Command="{Binding ParameterlessCommand}" CommandParameter="startupload" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black" Padding="5 0 5 0" Height="67">
                                <StackPanel Orientation="Vertical" MinWidth="50">
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="UploadMultiple" HorizontalAlignment="Center"/>
                                    <TextBlock TextAlignment="Center">
                                            Start<LineBreak />Upload
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                                <ToggleButton IsChecked="{Binding ResumeUploads}" Style="{StaticResource MaterialDesignSwitchToggleButton}" Background="Black" materialDesign:ToggleButtonAssist.SwitchTrackOnBackground="Black" Margin="0 6 0 0" HorizontalAlignment="Left"/>
                                <Label Width="50" HorizontalAlignment="Left" Margin="0 2 0 0">
                                    <TextBlock>
                                            Resume<LineBreak />Upload
                                    </TextBlock>
                                </Label>
                            </StackPanel>
                            <Button Command="{Binding ParameterlessCommand}" CommandParameter="stopupload" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black" Margin="10 0 5 0" Padding="5 0 5 0" Height="67">
                                <StackPanel  Orientation="Vertical" MinWidth="50">
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="Stop" HorizontalAlignment="Center"/>
                                    <TextBlock TextAlignment="Center">
                                            Stop<LineBreak />Upload
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="2" Margin="10" />

                            <Button HorizontalContentAlignment="Left" Command="{Binding ParameterlessCommand}" CommandParameter="delete" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black" Margin="0" Padding="5 0 5 0" Height="67">
                                <StackPanel Orientation="Vertical" MinWidth="5">
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="FileRemove" HorizontalAlignment="Center"/>
                                    <TextBlock TextAlignment="Center">
                                        Remove<LineBreak />Uploads
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                                <ToggleButton IsChecked="{Binding KeepLastUploadPerTemplate}" Style="{StaticResource MaterialDesignSwitchToggleButton}" Background="Black" materialDesign:ToggleButtonAssist.SwitchTrackOnBackground="Black" Margin="0 6 0 0" HorizontalAlignment="Left"/>
                                <Label Width="70" HorizontalAlignment="Left" Margin="0 2 0 0">
                                    <TextBlock>
                                            Keep<LineBreak />last upload
                                    </TextBlock>
                                </Label>
                            </StackPanel>
                            <materialDesign:PackIcon Kind="HelpCircleOutline" Margin="0 4 0 0"  ToolTip="Remove finished uploads and keep last upload per template for better overview of upload progress if enabled." ToolTipService.ShowDuration="60000" Background="Transparent"/>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="TEMPLATES" DataContext="{Binding RibbonViewModels[1]}">
                        <StackPanel Orientation="Horizontal" Margin="7 3 7 0" Background="Transparent">
                            <Button HorizontalContentAlignment="Left" VerticalAlignment="Top" Command="{Binding ParameterlessCommand}" CommandParameter="newtemplate" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"  Padding="5 0 5 0" Height="67">
                                <StackPanel Orientation="Vertical" MinWidth="50">
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="TextBoxPlus" HorizontalAlignment="Center"/>
                                    <TextBlock TextAlignment="Center">
                                        New<LineBreak />Template
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="2" Margin="10" />
                            <StackPanel Orientation="Vertical" Margin="5 3 0 8">
                                <materialDesign:PackIcon Width="24" Height="24" Kind="FileDocumentEdit" HorizontalAlignment="Center"/>
                                <ComboBox materialDesign:TextFieldAssist.UnderlineBrush="#67daff" IsEditable="False" VerticalAlignment="Bottom" ItemsSource="{Binding ObservableTemplateViewModels}" SelectedItem="{Binding SelectedTemplate}" Width="250" Margin="0 5 0 0">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding NameWithYoutubeAccountName}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="ComboBoxItem">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Visible}" Value="false">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                </ComboBox>
                            </StackPanel>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="2" Margin="10" />
                            <Button HorizontalContentAlignment="Left" VerticalAlignment="Top" Command="{Binding ParameterlessCommand}" CommandParameter="scheduleoverview" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"  Padding="5 0 5 0" Height="67">
                                <StackPanel Orientation="Vertical" MinWidth="50">
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="TextBoxSearch" HorizontalAlignment="Center"/>
                                    <TextBlock TextAlignment="Center">
                                        Schedule<LineBreak />Overview
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="PLAYLISTS" DataContext="{Binding RibbonViewModels[2]}">
                        <StackPanel Orientation="Horizontal" Margin="7 3 7 0" Background="Transparent">
                            <Button HorizontalContentAlignment="Left" VerticalAlignment="Top" Command="{Binding ParameterlessCommand}" CommandParameter="newplaylist" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"  Padding="5 0 5 0" Height="67">
                                <StackPanel Orientation="Vertical" MinWidth="50">
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="PlaylistPlus" HorizontalAlignment="Center"/>
                                    <TextBlock TextAlignment="Center">
                                            New<LineBreak />Playlist
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="2" Margin="10" />
                            <StackPanel Orientation="Vertical" Margin="5 3 0 8">
                                <materialDesign:PackIcon Width="24" Height="24" Kind="PlaylistEdit" HorizontalAlignment="Center"/>
                                <ComboBox materialDesign:TextFieldAssist.UnderlineBrush="#67daff" IsEditable="False" VerticalAlignment="Bottom" ItemsSource="{Binding ObservablePlaylistViewModels}" SelectedItem="{Binding SelectedPlaylist}" Width="250" Margin="0 5 0 0">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding TitleWithYoutubeAccountName}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="ComboBoxItem">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Visible}" Value="false">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                </ComboBox>
                            </StackPanel>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="2" Margin="10" />
                            <Button HorizontalContentAlignment="Left" Command="{Binding ParameterlessCommand}" CommandParameter="autosetplaylists" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black" Margin="0" Padding="5 0 5 0" Height="67">
                                <StackPanel Orientation="Vertical" MinWidth="50">
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="PlaylistCheck" HorizontalAlignment="Center"/>
                                    <TextBlock TextAlignment="Center">
                                            Set<LineBreak />Playlists
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                                <ToggleButton IsChecked="{Binding AutoSetPlaylists}" Style="{StaticResource MaterialDesignSwitchToggleButton}" Background="Black" materialDesign:ToggleButtonAssist.SwitchTrackOnBackground="Black" Margin="0 6 0 0" HorizontalAlignment="Left"/>
                                <Label Width="56" HorizontalAlignment="Left" Margin="0 2 0 0">
                                    <TextBlock>
                                            Auto Set<LineBreak />Playlists
                                    </TextBlock>
                                </Label>
                            </StackPanel>

                            <materialDesign:PackIcon Kind="HelpCircleOutline" Margin="0 4 0 0"  ToolTip="Set playlists to published video, if the playlist was configured to be set after publication in template. If auto set is toggled, playlists will be set to published videos every 12 hours automatically, while VidUp is running." ToolTipService.ShowDuration="60000" Background="Transparent"/>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="SETTINGS" DataContext="{Binding RibbonViewModels[3]}">
                        <StackPanel Orientation="Horizontal" Margin="7 3 7 0" Background="Transparent">
                            <Button HorizontalContentAlignment="Left" VerticalAlignment="Top" Command="{Binding NewYoutubeAccountCommand}" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"  Padding="5 0 5 0" Height="67">
                                <StackPanel Orientation="Vertical" MinWidth="50">
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="AccountPlus" HorizontalAlignment="Center"/>
                                    <TextBlock TextAlignment="Center">
                                        New YT<LineBreak />Account
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="2" Margin="10" />
                            <StackPanel Orientation="Vertical" Margin="5 3 0 8">
                                <materialDesign:PackIcon Width="24" Height="24" Kind="AccountEdit" HorizontalAlignment="Center"/>
                                <ComboBox materialDesign:TextFieldAssist.UnderlineBrush="#67daff" IsEditable="False" VerticalAlignment="Bottom" ItemsSource="{Binding ObservableYoutubeAccountViewModels}" SelectedItem="{Binding SelectedYoutubeAccount}" DisplayMemberPath="YoutubeAccountName" Width="150" Margin="0 5 0 0" />
                            </StackPanel>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="VIDUP" DataContext="{Binding RibbonViewModels[4]}">
                        <StackPanel Orientation="Horizontal" Margin="7 3 7 0" Background="Transparent">
                            <Button HorizontalContentAlignment="Left" VerticalAlignment="Top" Command="{Binding DonateCommand}" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"  Padding="5 0 5 0" Height="67">
                                <StackPanel Orientation="Vertical" MinWidth="50">
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="Handshake" HorizontalAlignment="Center"/>
                                    <TextBlock TextAlignment="Center">
                                        Donate
                                    </TextBlock>
                                </StackPanel>
                            </Button>

                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="2" Margin="10" />
                            <Button HorizontalContentAlignment="Left" VerticalAlignment="Top" Command="{Binding AboutCommand}" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"  Padding="5 0 5 0" Height="67">
                                <StackPanel Orientation="Vertical" MinWidth="50">
                                    <materialDesign:PackIcon Width="24" Height="24" Kind="InformationOutline" HorizontalAlignment="Center"/>
                                    <TextBlock TextAlignment="Center">
                                             About
                                    </TextBlock>
                                </StackPanel>
                            </Button>

                        </StackPanel>
                    </TabItem>
                </TabControl>

                <ContentControl Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Content="{Binding CurrentViewModel}"/>

                <StackPanel Grid.Row="2" Orientation="Vertical">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <Label Content="App Status: "/>
                            <Label Content="{Binding AppStatus, Mode=OneWay}"/>
                            <Label Content="  |  "/>
                            <Label Content="YT Account: "/>
                            <ComboBox ItemsSource="{Binding ObservableYoutubeAccountViewModelsInclAll}" SelectedItem="{Binding SelectedYoutubeAccount}" DisplayMemberPath="YoutubeAccountName" Width="125" Padding="0"/>
                            <materialDesign:PackIcon Kind="HelpCircleOutline" VerticalAlignment="Top" Margin="10 4 0 0" ToolTip="Filters view to selected account and is default account for operation whithout account context, e.g. creatin new templates or getting playlists." ToolTipService.ShowDuration="60000" Background="Transparent"/>
                            <Label Content="  |  "/>
                            <Label Content="Post Upload Action: "/>
                            <ComboBox ItemsSource="{Binding PostUploadActions}" SelectedItem="{Binding PostUploadAction}" Width="125" Padding="0">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={converters:EnumConverter}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <materialDesign:PackIcon Kind="HelpCircleOutline" VerticalAlignment="Top" Margin="10 4 0 0" ToolTip="Action performed after all uploads are finished." ToolTipService.ShowDuration="60000" Background="Transparent"/>
                            <Label Content="  |  "/>
                            <CheckBox IsChecked="{Binding PostponePostUploadAction}"/>
                            <Label Content="Postpone PUA on process:"/>
                            <TextBox Text="{Binding PostponePostUploadActionProcessName, UpdateSourceTrigger=PropertyChanged, Delay=500}" Width="150"/>
                            <materialDesign:PackIcon Kind="HelpCircleOutline" VerticalAlignment="Top" Margin="10 4 0 0" ToolTip="Postpones post upload action until process doesn't exist/app of this process is closed. Check for process runs every 5 minutes." ToolTipService.ShowDuration="60000" Background="Transparent"/>
                            <Label Content="  |  "/>
                            <Label Content="Max Upload: "/>
                            <TextBox Text="{Binding MaxUploadInKiloBytesPerSecond, UpdateSourceTrigger=PropertyChanged, Delay=500}" Width="70"/>
                            <materialDesign:PackIcon Kind="HelpCircleOutline" VerticalAlignment="Top" Margin="10 4 0 0" ToolTip="Set maximum upload bandwidth in kByte/s. Minimum value is half of network package size down to 32, everything below is set to 0 which means no upload bandwidth limit." ToolTipService.ShowDuration="60000" Background="Transparent"/>
                        </StackPanel>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="right">
                            <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}" Value="35" IsIndeterminate="True" Visibility="{Binding AutoSettingPlaylists, Mode=OneWay, Converter={converters:BoolTrueVisibilityConverter}}"/>
                            <materialDesign:PackIcon Kind="PlaylistCheck" VerticalAlignment="Top" Margin="10 4 3 0" ToolTip="{Binding AutoSettingPlaylistsText, Mode=OneWay}" ToolTipService.ShowDuration="60000" Background="Transparent" Foreground="{Binding AutoSettingPlaylistsColor, Mode=OneWay}"/>
                        </StackPanel>
                    </Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <Label Content="Current File Progress: "/>
                            <Label Content="{Binding CurrentFilePercent, Mode=OneWay}"/>
                            <Label Content="  |  "/>
                            <Label Content="Current File Time Left: "/>
                            <Label Content="{Binding CurrentFileTimeLeft, Mode=OneWay}"/>
                            <Label Content="  |  "/>
                            <Label Content="Current File MB left: "/>
                            <Label Content="{Binding CurrentFileMbLeft, Mode=OneWay}"/>
                            <Label Content="  |  "/>
                            <Label Content="Current Upload Speed (kBytes/s): "/>
                            <Label Content="{Binding CurrentUploadSpeedInKiloBytesPerSecond, Mode=OneWay}"/>
                        </StackPanel>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="right">
                            <Label Content="Total Time Left: "/>
                            <Label Content="{Binding TotalTimeLeft, Mode=OneWay}"/>
                            <Label Content="  |  "/>
                            <Label Content="Total MB Left: "/>
                            <Label Content="{Binding TotalMbLeft, Mode=OneWay}"/>
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </Grid>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
